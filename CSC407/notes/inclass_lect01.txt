for (i = 0; i < n; i++)
  for (j = 0; j < n; j++)
    for (k = 0; k < j; k++)
      a[i*n + i*j-k] = b[k*7];
	  
for (i = 0; i < n; i++)
{
  int in = i*n;
  for (j = 0; j < n; j++)
  {
	int in_ij = in + i*j;
    for (k = 0; k < j; k++)
      a[in_ij - k] = b[k*7];
  }
}

above = array[(n*n)*(i+1)+j*n +k];
below = array[(n*n)*(i-1)+j*n +k];
left  = array[i*n*n +n*(j-1)+k];
right = array[i*n*n +n*(j+1)+k];
front = array[i*n*n +j*n +k-1];
back  = array[i*n*n +j*n +k+1];
aver  = (above+below+right+front+back+left)/6;


int nn = n*n;
int middle = i*nn + j*n + k;
above = array[middle - nn];
below = array[middle + nn];
left  = array[middle - n];
right = array[middle + n];
front = array[middle-1];
back  = array[middle+1];
aver  = (above+below+right+front+back+left)/6;



i*3  = (i << 1) + i;
i*12 = (i << 3) + (i << 2) = ((i << 1) + i) << 2;
i*20 = (i << 4) + (i << 2); 
i*31 = (i << 5) -i;
int in = 0;
for (i = 0; i < n; i++)
{
  int ij = 0;
  for (j = 0; j < n; j++)
  {
	int in_ij = in + ij;
    for (k = 0; k < j; k++)
      a[in_ij - k] = b[(k<<3)-k];
	ij += i;
  }
  in += n;
}
